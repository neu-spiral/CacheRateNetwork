#! /bin/bash

# sbatch ../script.sh PrimalDual.py Prob --graph_type grid_2d --graph_size 20 --catalog_size 10 --demand_size 100 --query_nodes 2  --bandwidth_coefficient 0.7 --iterations 1000 --stepsize 10

# sbatch ../script.sh PrimalDual.py Prob --graph_type grid_2d --graph_size 20 --catalog_size 10 --demand_size 100 --query_nodes 2  --bandwidth_coefficient 0.7 --iterations 1000 --stepsize 50

#sbatch ../script.sh PrimalDual.py Prob --graph_type grid_2d --graph_size 20 --catalog_size 10 --demand_size 100 --query_nodes 2  --bandwidth_coefficient 0.75 --iterations 1000 --stepsize 10

#sbatch ../script.sh PrimalDual.py Prob --graph_type grid_2d --graph_size 20 --catalog_size 10 --demand_size 100 --query_nodes 2  --bandwidth_coefficient 0.75 --iterations 1000 --stepsize 50

#sbatch ../script.sh PrimalDual.py Prob --graph_type grid_2d --graph_size 20 --catalog_size 10 --demand_size 100 --query_nodes 2  --bandwidth_coefficient 0.8 --iterations 1000 --stepsize 10

for type in 1 2 3
  do
  for bandwidth in 1 1.5 2 2.5 3
  do
    for graph in grid_2d erdos_renyi hypercube balanced_tree small_world
    do
      for stepsize in 50 100 500
      do
        sbatch ../script.sh PrimalDual.py Prob --graph_type $graph --bandwidth_coefficient $bandwidth --stepsize $stepsize --bandwidth_type $type
      done
    done
    for graph in geant dtelekom example1 example2 abilene abilene2
    do
      for stepsize in 10 50 100
      do
        sbatch ../script.sh PrimalDual.py Prob --graph_type $graph --bandwidth_coefficient $bandwidth --stepsize $stepsize --query_nodes 4 --bandwidth_type $type
      done
    done
  done
done


#Prob --graph_type grid_2d --graph_size 20 --catalog_size 10 --demand_size 100 --max_paths 2 --query_nodes 2 --bandwidth_coefficient 0.75 --max_capacity 1